package site

import (
	"github.com/delaneyj/toolbelt"
	"strings"
)

templ ErrorView(typ, name string, args templ.Component) {
	<div class="flex flex-col gap-8">
		<div class="prose prose-lg flex-1">
			<h1>{ name }</h1>
			<div class="card bg-base-300">
				<div class="card-body">
					<div class="card-title -mt-8">
						<h3>{ typ } Error</h3>
					</div>
					@args
				</div>
			</div>
			<h2>Explanation</h2>
			{ children... }
		</div>
	</div>
}

templ runtimeArgs(info *RuntimeErrorInfo) {
	{{
		pluginName := toolbelt.Kebab(info.Plugin.Name)
		pluginType := strings.ToLower(info.Plugin.Type)
		elementTag := strings.ToLower(info.Element.Tag)
		key := toolbelt.Kebab(info.Raw.Key)
	}}
	if pluginName != "" {
		<div>
			A runtime error was encountered in a <code>data-{ pluginName }</code> { pluginType }.
		</div>
		if info.Error != "" {
			<div>
				<pre>
					{ info.Error }
				</pre>
			</div>
		}
		<div>
			<h3>Element</h3>
			<pre>
				&lt;{ elementTag } id="{ info.Element.ID }" data-{ key }="{ info.Raw.Value }"&gt;&lt;/{ elementTag }&gt;
			</pre>
		</div>
		if info.Expression.FnContent != "" {
			<div>
				<h3>Expression</h3>
				<pre>
					{ info.Expression.FnContent }
				</pre>
			</div>
		}
	}
}

templ RuntimeErrorView(name string, info *RuntimeErrorInfo) {
	@ErrorView("Runtime", name, runtimeArgs(info)) {
		{ children... }
	}
}

templ initArgs(info *InitErrorInfo) {
	if info.Plugin.Type != "" {
		<div>
			Initializing { info.Plugin.Type } plugin data-{ info.Plugin.Name }
		</div>
	}
}

templ InitErrorView(name string, info *InitErrorInfo) {
	@ErrorView("Init", name, initArgs(info)) {
		{ children... }
	}
}

templ internalArgs(info InternalErrorInfo) {
	<div>
		<h3>Internal Error</h3>
		<pre>
			{ templ.JSONString(info) }
		</pre>
	</div>
}

templ InternalErrorView(name string, info InternalErrorInfo) {
	@ErrorView("Internal", name, internalArgs(info)) {
		{ children... }
	}
}
