{:paths ["src/main" "src/bb"]
 :tasks
 {:requires ([tasks :as t])

  -prep (t/prep-libs)

  dev {:task (t/dev :http-kit :ring-jetty :malli-schemas)}

  dev:rj9a {:task (t/dev :http-kit :ring-rj9a :malli-schemas)}

  dev:empty (t/dev :malli-schemas)

  test:all (t/lazytest [:http-kit
                        :ring-jetty
                        :malli-schemas
                        :sdk-brotli]
                       [:test.paths/core-sdk
                        :test.paths/malli-schemas
                        :test.paths/brotli
                        :test.paths/adapter-ring
                        :test.paths/adapter-http-kit
                        :test.paths/adapter-ring-jetty])

  test:all-w (t/lazytest [:http-kit
                          :ring-jetty
                          :malli-schemas
                          :sdk-brotli]
                         [:test.paths/core-sdk
                          :test.paths/malli-schemas
                          :test.paths/brotli
                          :test.paths/adapter-ring
                          :test.paths/adapter-ring-jetty
                          :test.paths/adapter-http-kit]
                         "--watch"
                         "--delay 1000")

  test:rj9a (t/lazytest [:http-kit
                         :ring-rj9a]
                        [:test.paths/core-sdk
                         :test.paths/adapter-ring
                         :test.paths/adapter-rj9a])

  jar:sdk {:doc  "Build jar for the common sdk"
           :task (t/lib-jar! t/sdk-dir)}

  jar:sdk-adapter-ring {:doc  "Build jar for the adapter-ring"
                        :task (t/lib-jar! t/sdk-adapter-ring-dir)}

  jar:sdk-adapter-http-kit {:doc  "Build jar for the adapter-http-kit"
                            :task (t/lib-jar! t/sdk-adapter-http-kit-dir)}

  jar:sdk-brotli {:doc  "Build jar for the Brotli library"
                  :task (t/lib-jar! t/sdk-brotli-dir)}

  jar:sdk-malli-schemas {:doc  "Build jar for the malli-schemas"
                         :task (t/lib-jar! t/sdk-malli-schemas-dir)}

  jar:all {:doc     "Build the jar for all the libs"
           :depends [clean
                     jar:sdk
                     jar:sdk-adapter-ring
                     jar:sdk-adapter-http-kit
                     jar:sdk-brotli
                     jar:sdk-malli-schemas]}

  install:all {:doc "Install all libraries"
               :depends [clean]
               :task (doseq [dir t/sdk-lib-dirs]
                       (t/lib-install! dir))}

  clean {:doc  "Clean build artifacts"
         :task (doseq [dir t/sdk-lib-dirs]
                 (clojure {:dir dir} "-T:build clean"))}

  set-version {:doc  "Set the version in all libs"
               :task (doseq [dir t/sdk-lib-dirs]
                       (t/lib-set-version! dir (first *command-line-args*)))}

  bump-version {:doc  "Bump the version component in all libs. First argument must be one of: major, minor, patch"
                :task (doseq [dir sdk-lib-dirs]
                        (let [component (first *command-line-args*)]
                          (t/lib-bump! dir component)))}

  publish:all {:doc     "Publish the clojure sdk libs to clojars"
               :depends [jar:all]
               :task    (doseq [dir sdk-lib-dirs]
                          (t/lib-publish! dir))}}}
