// This is auto-generated by Datastar. DO NOT EDIT.

namespace StarFederation.Datastar

open System

type FragmentMergeMode =
/// Morphs the fragment into the existing element using idiomorph, preserving focus and minimizing element changes.
| Outer
/// Morphs the fragment into the innerHTML using idiomorph, preserving focus and minimizing element changes.
| Inner
/// Removes the existing element from the DOM.
| Remove
/// Prepends the fragment inside the existing element.
| Prepend
/// Appends the fragment inside the existing element.
| Append
/// Inserts the fragment before the existing element.
| Before
/// Inserts the fragment after the existing element.
| After

type EventType =
/// An event for merging HTML fragments into the DOM.
| MergeFragments
/// An event for merging signals.
| MergeSignals
/// An event for executing &lt;script/&gt; elements in the browser.
| ExecuteScript


module Consts =
    let [<Literal>] DatastarKey               = "datastar"
    let [<Literal>] Version                   = "1.0.0-beta.11"

    /// Default: TimeSpan.FromMilliseconds 1000
    let DefaultSseRetryDuration = TimeSpan.FromMilliseconds 1000


    /// Default: outer - Morphs the fragment into the existing element using idiomorph, preserving focus and minimizing element changes.
    let DefaultFragmentMergeMode = Outer

    let [<Literal>] DefaultFragmentsUseViewTransitions = false
    let [<Literal>] DefaultMergeSignalsOnlyIfMissing = false
    let [<Literal>] DefaultExecuteScriptAutoRemove = true

    let [<Literal>] DefaultExecuteScriptAttributes = "type module"

    let [<Literal>] DatastarDatalineSelector = "selector"
    let [<Literal>] DatastarDatalineMergeMode = "mergeMode"
    let [<Literal>] DatastarDatalineFragments = "fragments"
    let [<Literal>] DatastarDatalineUseViewTransition = "useViewTransition"
    let [<Literal>] DatastarDatalineSignals = "signals"
    let [<Literal>] DatastarDatalineOnlyIfMissing = "onlyIfMissing"
    let [<Literal>] DatastarDatalineScript = "script"
    let [<Literal>] DatastarDatalineAttributes = "attributes"
    let [<Literal>] DatastarDatalineAutoRemove = "autoRemove"

    module FragmentMergeMode =
        let toString this =
            match this with
                | FragmentMergeMode.Outer -> "outer"
                | FragmentMergeMode.Inner -> "inner"
                | FragmentMergeMode.Remove -> "remove"
                | FragmentMergeMode.Prepend -> "prepend"
                | FragmentMergeMode.Append -> "append"
                | FragmentMergeMode.Before -> "before"
                | FragmentMergeMode.After -> "after"

    module EventType =
        let toString this =
            match this with
                | EventType.MergeFragments -> "datastar-merge-fragments"
                | EventType.MergeSignals -> "datastar-merge-signals"
                | EventType.ExecuteScript -> "datastar-execute-script"